New in 0.23.0
- Replace callback functions by promises?
- Avoid flashing?

New in 0.22.2
- Bug fixed: local macro calls not working properly when using them in remote macros.

New in 0.22.1
- Bug fixed: scope errors in loops fixed.

New in 0.22.0
- Version of Jquery updated to 3.0.0.

New in 0.21.1
- Bug fixed: don't render a attribute with an undefined value.

New in 0.21.0
- Full support of boolean attributes (checked, compact, declare, defer, disabled, ismap, multiple, nohref, noresize, noshade, nowrap, readonly and selected).

New in 0.20.5
- Problem with version number of npmjs.

New in 0.20.4
- Bug fixed: value of notRemoveGeneratedTags option was not updated when zpt was invoked several times.

New in 0.20.3
- Bug fixed: offset added to loops to prevent buggy index properties when using dynamic loops.
- Updated userguide about web server for testing purposes.

New in 0.20.2
- Bug fixed: callback executed in processAllRootElements method of Parser class.

New in 0.20.1
- Bug fixed: dictionary not updated when calling several times to run method in Parser class.
- Bug fixed: node test fixed.

New in 0.20.0
- Some changes in Parser class: run method removed, runSync method renamed to run. This makes run method is always sync, so all code is in init method.

New in 0.19.0
- Makes it easy to separate async code (for loading external macros files) from sync code.
    - Resolver class now is singleton.
    - New exported method: buildParser.
    - Added init and runSync methods to Parser class.

New in 0.18.0
- Added http-server dev dependency for testing purposes: now it is possible to run tests using the HTTP server in port 9000. Run 'npm run start' in your console and then open 'http://localhost:9000/test/' in your browser.

New in 0.17.0
- Make it easy to use ZPT's original attributes. Added useOriginalTags method to context.
- New exported method: logHelper.
- Some logs changed from info to debug.
- Added try-catch to run method in parser.

New in 0.16.0
- Bug fixed: local macros now work when defining one in an external file.
- Better error messages: error messages now show the source attribute or string expression.

New in 0.15.1
- Bug fixed: buildRemotePageUrlList could throw an exception trying to resolve an expression which can't be resolved before rendering the document.

New in 0.15.0
- New exported method: context.
- Better logging support: 
    - It can be activated or deactivated setting context.getConf().loggingOn (default is off).
    - The log level can be customized setting context.getConf().loggingLevel (default is ERROR).
    - It can be fully customized using context.setLogger( log4javascriptInstance ). See http://log4javascript.org/ for details.

New in 0.14.0
- Now data-idomain tags can be set to an array of I18n instances.

New in 0.13.2
- Bug fixed: generated tags not removed before loading remote pages.

New in 0.13.1
- Bug fixed: generated tags not removed when needed.

New in 0.13.0
- Added support of multiroot: root now can be a string or an array of them.

New in 0.12.0
- Added support of map attributtes.

New in 0.11.0
- Added support of expressions in use-macro. 
- Default delemiter character in external macros updated from '/'  to '@'.

New in 0.10.0
- Added in expressions.

New in 0.9.2
- Bug fixed: wrong order in tal:repeat. 

New in 0.9.1
- Standalone version fixed. Using browserify-derequire.

New in 0.9.0
- Added support of object members (using array delimiters).

New in 0.8.0
- Added help to select the correct I18n instance. Add data-ilanguage tag.

New in 0.7.0
- Support of custom expressions. Refactoring of expressionEvaluator class.
- Cache of expressions and ZPT attributes.
- Some logging support.
- Support of Node.js. Sample and tests added.

New in 0.6.0
- Migrate to Browserify (CommonJS modules).

New in 0.5.0
- Use ZPT namespace.
- Change signature of ZPT.run to use options instead of several arguments.

New in 0.4.0
- Added number formatting L10n using Intl.
- Added currency formatting L10n using Intl (currency codes from ISO 4217).
- Added date/time formatting L10n using Intl.
- Added tr, trNumber, trCurrency and trDate expressions.
- Remove all i18n tags except data-idomain.
    
New in 0.3.0
- Added i18n capabilities (only for text) using messageformat.js.
- Added i18n tags:
    - data-idomain. Register a list of I18n instances to do i18n.
    - data-idefine. Search the specified value into the available I18n instances and save the value to a variable.
    - data-icontent. It works as data-tcontent, but searching the specified value into the availablbeefye I18n instances.
    - data-ireplace. As data-treplace.
    - data-iattributes. As data-tattributes.
    - data-ion-error. As data-ton-error.

New in 0.2.0
- Initial version. Initially a fork of Distal but finally nearly all code removed. Added some code from JPT (migrated from Java).
